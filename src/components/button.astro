---
import type { HTMLAttributes } from "astro/types";
import { cva, type VariantProps } from "class-variance-authority";
import { cn } from "@utils/cn";

const button = cva(
  "rounded-xl font-bold py-3 px-6 text-lg border-2  transition-all duration-150",
  {
    variants: {
      variant: {
        primary: ["bg-primary", "text-primary-foreground"],
        secondary: ["bg-secondary", "text-secondary-foreground"],
        accent: ["bg-accent", "text-accent-foreground"],
        muted: ["bg-muted", "text-muted-foreground"],
        destructive: ["bg-destructive", "text-destructive-foreground"],
        outline: [
          "bg-transparent",
          "border-2",
          "border-primary",
          "text-primary",
        ],
        icon: [
          "shadow-dark-xsmall",
          "hover:shadow-dark-medium",
          "active:shadow-none active:translate-x-1 active:translate-y-1",
          "bg-muted",
          "border-2 border-black",
          "rounded",
        ],
        ghost: [
          "bg-transparent",
          "text-foreground",
          "hover:bg-muted",
          "hover:border-2",
        ],
        link: [
          "text-primary",
          "underline",
          "hover:text-primary/80",
          "py-1",
          "px-2",
        ],
      },
      size: {
        default: [
          "py-3",
          "px-6",
          "text-lg",
          "shadow-dark",
          "hover:shadow-dark-small",
          "active:translate-x-medium active:translate-y-medium active:shadow-none",
        ],
        icon: ["py-2", "px-2"],
        sm: [
          "py-2",
          "px-4",
          "text-base",
          "shadow-dark-medium",
          "hover:shadow-dark-xsmall",
          "active:translate-x-small active:translate-y-small active:shadow-none",
        ],
        lg: [
          "py-4",
          "px-8",
          "text-xl",
          "shadow-dark-large",
          "hover:shadow-dark-medium",
          "active:translate-x-large active:translate-y-large active:shadow-none",
        ],
      },
    },
  }
);
export interface Props
  extends HTMLAttributes<"button">,
    VariantProps<typeof button> {}

const {
  variant = "primary",
  size = "default",
  class: className,
  id,
  ...rest
} = Astro.props as Props;
---

<button
  class={cn(button({ variant, size }), className)}
  {...rest}
  id={id}>
  <slot />
</button>
