---
import ThemeIcon from "@components/ThemeIcon.astro";

interface NavItem {
  label: string;
  href: string;
}

interface Props {
  items: NavItem[];
  hideOnScroll?: boolean;
}

const { items, hideOnScroll = true } = Astro.props as Props;
---

<nav
  id="navbar"
  class:list={[
    "bg-background border-4 border-black",
    "shadow-dark-large",
    "px-6 py-3 rounded-lg",
    "transition-all duration-300 ease-in-out",
    "z-50",
    "flex justify-between items-center",
    "w-[calc(100%-2rem)] max-w-4xl",
    {
      "fixed top-4 left-1/2 transform -translate-x-1/2": hideOnScroll,
      "sticky top-4 left-0 right-0 mx-auto": !hideOnScroll,
    },
  ]}>
  <ul class="flex space-x-6">
    {
      items.map((item) => (
        <li>
          <a
            class="nav-link"
            href={item.href}>
            {item.label}
          </a>
        </li>
      ))
    }
  </ul>
  <ThemeIcon />
</nav>

<style>
  .nav-link {
    @apply font-bold text-lg text-foreground relative transition-all duration-300;
  }

  .nav-link::after {
    content: "";
    @apply absolute left-0 -bottom-1 w-0 h-1 bg-primary transition-all duration-300;
  }

  .nav-link:hover::after,
  .nav-link.active::after {
    @apply w-full;
  }

  .nav-link.active {
    @apply text-foreground;
  }
</style>

<script define:vars={{ hideOnScroll }}>
  let prevScrollPos = window.scrollY;
  const navbar = document.getElementById("navbar");
  const navLinks = document.querySelectorAll(".nav-link");
  const currentPath = window.location.pathname;

  if (hideOnScroll) {
    window.onscroll = () => {
      const currentScrollPos = window.scrollY;

      if (navbar) {
        if (prevScrollPos > currentScrollPos) {
          navbar.style.transform = "translate(-50%, 0)";
          navbar.style.opacity = "1";
        } else {
          navbar.style.transform = "translate(-50%, -150%)";
          navbar.style.opacity = "0";
        }
      }

      prevScrollPos = currentScrollPos;
    };
  }

  navLinks.forEach((link) => {
    if (link.getAttribute("href") === currentPath) {
      link.classList.add("active");
    }
  });
</script>
